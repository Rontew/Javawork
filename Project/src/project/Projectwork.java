/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.MessageFormat;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import javax.swing.undo.AbstractUndoableEdit;
import javax.swing.undo.UndoManager;
import javax.swing.undo.UndoableEdit;
import static project.Product.ID_HEADER;
import static project.Product.LOCATION_HEADER;
import static project.Product.NAME_HEADER;
import static project.Product.PRICE_HEADER;
import static project.Product.PRODUCT_START_LINE;
import static project.Product.QUANTITY_HEADER;
import static project.Product.SUBTOTAL_HEADER;
import static project.Product.TOTAL_HEADER;
import static project.Product.VAT_HEADER;


/**
 *
 * @author roope
 */
public class Projectwork extends javax.swing.JFrame {

    /**
     * Creates new form Projectwork
     */
    public Projectwork() {
        initComponents();
        jDialog1.pack();
        jDialog2.pack();
        Edit_dialog.pack();
        VAT.setText(Double.toString(Vat));
        Subtotal.setText(Double.toString(SUBTOTAL));
        TOTAL.setText(Double.toString(Total_count));
        InputMap im = Add.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        im.put(KeyStroke.getKeyStroke("SPACE"), "spacing");
        undos = new UndoManager();

    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        Name = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        Amount = new javax.swing.JTextField();
        Insert = new javax.swing.JButton();
        Dialog1_productname = new javax.swing.JLabel();
        Dialog1_Price = new javax.swing.JLabel();
        Dialog1_Quantity = new javax.swing.JLabel();
        Vat_procent = new javax.swing.JLabel();
        Vat_field = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Warehouse_Combo = new javax.swing.JComboBox<>();
        Edit_dialog = new javax.swing.JDialog();
        edit_name = new javax.swing.JTextField();
        edit_price = new javax.swing.JTextField();
        Edit_ok = new javax.swing.JButton();
        edit_quantity = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        edit_vat = new javax.swing.JTextField();
        edit_location = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDialog2 = new javax.swing.JDialog();
        jButton2 = new javax.swing.JButton();
        toDollars = new javax.swing.JRadioButton();
        toEuros = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        FontBox = new javax.swing.JComboBox<>();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        Add = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int d,int c){
                return false;
            }
        };
        Clear = new javax.swing.JButton();
        Print = new javax.swing.JButton();
        Subtotal_text = new javax.swing.JLabel();
        Vat_text = new javax.swing.JLabel();
        Total_text = new javax.swing.JLabel();
        Subtotal = new javax.swing.JLabel();
        VAT = new javax.swing.JLabel();
        TOTAL = new javax.swing.JLabel();
        source = new javax.swing.JLabel();
        source2 = new javax.swing.JLabel();
        source3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        kakka = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Save = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Undo = new javax.swing.JMenuItem();
        Redo = new javax.swing.JMenuItem();
        Open1 = new javax.swing.JMenu();
        OpenSettings = new javax.swing.JMenuItem();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("project/Bundle"); // NOI18N
        Name.setText(bundle.getString("Projectwork.Name.text")); // NOI18N
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });
        Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NameKeyPressed(evt);
            }
        });

        Price.setText(bundle.getString("Projectwork.Price.text")); // NOI18N
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });
        Price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PriceKeyPressed(evt);
            }
        });

        Amount.setText(bundle.getString("Projectwork.Amount.text")); // NOI18N
        Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountActionPerformed(evt);
            }
        });
        Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AmountKeyPressed(evt);
            }
        });

        Insert.setText(bundle.getString("Projectwork.Insert.text")); // NOI18N
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });
        Insert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InsertKeyPressed(evt);
            }
        });

        Dialog1_productname.setText(bundle.getString("Projectwork.Dialog1_productname.text")); // NOI18N

        Dialog1_Price.setText(bundle.getString("Projectwork.Dialog1_Price.text")); // NOI18N

        Dialog1_Quantity.setText(bundle.getString("Projectwork.Dialog1_Quantity.text")); // NOI18N

        Vat_procent.setText(bundle.getString("Projectwork.Vat_procent.text")); // NOI18N

        Vat_field.setText(bundle.getString("Projectwork.Vat_field.text")); // NOI18N
        Vat_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Vat_fieldKeyPressed(evt);
            }
        });

        jLabel1.setText(bundle.getString("Projectwork.jLabel1.text")); // NOI18N

        Warehouse_Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Varasto A", "Varasto B", "Varasto C", "Varasto D" }));
        Warehouse_Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Warehouse_ComboActionPerformed(evt);
            }
        });
        Warehouse_Combo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Warehouse_ComboKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Dialog1_productname)
                    .addComponent(Dialog1_Price)
                    .addComponent(Dialog1_Quantity)
                    .addComponent(Vat_procent)
                    .addComponent(jLabel1))
                .addGap(59, 59, 59)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(Price)
                    .addComponent(Amount)
                    .addComponent(Vat_field)
                    .addComponent(Warehouse_Combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Insert)
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dialog1_productname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dialog1_Price))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dialog1_Quantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Vat_procent)
                    .addComponent(Vat_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Warehouse_Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(Insert)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        edit_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_nameActionPerformed(evt);
            }
        });
        edit_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_nameKeyPressed(evt);
            }
        });

        edit_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_priceActionPerformed(evt);
            }
        });
        edit_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_priceKeyPressed(evt);
            }
        });

        Edit_ok.setText(bundle.getString("Projectwork.Edit_ok.text")); // NOI18N
        Edit_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_okActionPerformed(evt);
            }
        });
        Edit_ok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Edit_okKeyPressed(evt);
            }
        });

        edit_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_quantityActionPerformed(evt);
            }
        });
        edit_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_quantityKeyPressed(evt);
            }
        });

        jLabel2.setText(bundle.getString("Projectwork.jLabel2.text")); // NOI18N

        jLabel3.setText(bundle.getString("Projectwork.jLabel3.text")); // NOI18N

        jLabel4.setText(bundle.getString("Projectwork.jLabel4.text")); // NOI18N

        edit_vat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_vatKeyPressed(evt);
            }
        });

        edit_location.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_locationKeyPressed(evt);
            }
        });

        jLabel6.setText(bundle.getString("Projectwork.jLabel6.text")); // NOI18N

        jLabel7.setText(bundle.getString("Projectwork.jLabel7.text")); // NOI18N

        javax.swing.GroupLayout Edit_dialogLayout = new javax.swing.GroupLayout(Edit_dialog.getContentPane());
        Edit_dialog.getContentPane().setLayout(Edit_dialogLayout);
        Edit_dialogLayout.setHorizontalGroup(
            Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Edit_dialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Edit_dialogLayout.createSequentialGroup()
                        .addComponent(Edit_ok)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Edit_dialogLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(edit_price, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Edit_dialogLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Edit_dialogLayout.createSequentialGroup()
                        .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(edit_location)
                            .addComponent(edit_vat)
                            .addComponent(edit_quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))))
                .addContainerGap())
        );
        Edit_dialogLayout.setVerticalGroup(
            Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Edit_dialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(11, 11, 11)
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_vat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(Edit_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(Edit_ok)
                .addContainerGap())
        );

        jButton2.setText(bundle.getString("Projectwork.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        toDollars.setText(bundle.getString("Projectwork.toDollars.text")); // NOI18N
        toDollars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDollarsActionPerformed(evt);
            }
        });

        toEuros.setText(bundle.getString("Projectwork.toEuros.text")); // NOI18N
        toEuros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toEurosActionPerformed(evt);
            }
        });

        jLabel9.setText(bundle.getString("Projectwork.jLabel9.text")); // NOI18N

        jLabel5.setText(bundle.getString("Projectwork.jLabel5.text")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Finnish", "English", " " }));

        jLabel10.setText(bundle.getString("Projectwork.jLabel10.text")); // NOI18N

        FontBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "14", "18", "22" }));

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(toDollars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(toEuros)
                .addGap(78, 78, 78))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog2Layout.createSequentialGroup()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jDialog2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(40, 40, 40)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGap(23, 23, 23))
            .addComponent(jSeparator6)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(FontBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(7, 7, 7)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toDollars)
                    .addComponent(toEuros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(FontBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jMenuItem2.setText(bundle.getString("Projectwork.jMenuItem2.text")); // NOI18N

        jMenu1.setText(bundle.getString("Projectwork.jMenu1.text")); // NOI18N
        jMenuBar2.add(jMenu1);

        jMenu2.setText(bundle.getString("Projectwork.jMenu2.text")); // NOI18N
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/create-512.png"))); // NOI18N
        Add.setText(bundle.getString("Projectwork.Add.text")); // NOI18N
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        Add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddKeyPressed(evt);
            }
        });

        Remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/download.png"))); // NOI18N
        Remove.setText(bundle.getString("Projectwork.Remove.text")); // NOI18N
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/edit.png"))); // NOI18N
        Update.setText(bundle.getString("Projectwork.Update.text")); // NOI18N
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Product", "Price(VAT 0%)", "Quantity", "Location", "Currency", "Subtotal", "Vat%", "Total"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title0")); // NOI18N
            jTable1.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title1")); // NOI18N
            jTable1.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title2")); // NOI18N
            jTable1.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title3")); // NOI18N
            jTable1.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title5")); // NOI18N
            jTable1.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title6")); // NOI18N
            jTable1.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title7")); // NOI18N
            jTable1.getColumnModel().getColumn(7).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title8_1")); // NOI18N
            jTable1.getColumnModel().getColumn(8).setHeaderValue(bundle.getString("Projectwork.jTable1.columnModel.title4_2")); // NOI18N
        }

        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/remove-icon-png-25.png"))); // NOI18N
        Clear.setText(bundle.getString("Projectwork.Clear.text")); // NOI18N
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/printer.png"))); // NOI18N
        Print.setText(bundle.getString("Projectwork.Print.text")); // NOI18N
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        Subtotal_text.setText(bundle.getString("Projectwork.Subtotal_text.text")); // NOI18N

        Vat_text.setText(bundle.getString("Projectwork.Vat_text.text")); // NOI18N

        Total_text.setText(bundle.getString("Projectwork.Total_text.text")); // NOI18N

        source.setText(bundle.getString("Projectwork.source.text")); // NOI18N

        source2.setText(bundle.getString("Projectwork.source2.text")); // NOI18N

        source3.setText(bundle.getString("Projectwork.source3.text")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel8.setText(bundle.getString("Projectwork.jLabel8.text")); // NOI18N

        kakka.setText(bundle.getString("Projectwork.kakka.text")); // NOI18N

        File.setText(bundle.getString("Projectwork.File.text")); // NOI18N

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setText(bundle.getString("Projectwork.Save.text")); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        Open.setText(bundle.getString("Projectwork.Open.text")); // NOI18N
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);
        File.add(jSeparator1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText(bundle.getString("Projectwork.jMenuItem1.text")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        File.add(jMenuItem1);

        jMenuBar1.add(File);

        Edit.setText(bundle.getString("Projectwork.Edit.text")); // NOI18N

        Undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        Undo.setText(bundle.getString("Projectwork.Undo.text")); // NOI18N
        Undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoActionPerformed(evt);
            }
        });
        Edit.add(Undo);

        Redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        Redo.setText(bundle.getString("Projectwork.Redo.text")); // NOI18N
        Redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedoActionPerformed(evt);
            }
        });
        Edit.add(Redo);

        jMenuBar1.add(Edit);

        Open1.setText(bundle.getString("Projectwork.Open1.text")); // NOI18N

        OpenSettings.setText(bundle.getString("Projectwork.OpenSettings.text")); // NOI18N
        OpenSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenSettingsActionPerformed(evt);
            }
        });
        Open1.add(OpenSettings);

        jMenuBar1.add(Open1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Remove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Clear)
                .addGap(18, 18, 18)
                .addComponent(Print)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Subtotal_text)
                            .addComponent(Vat_text)
                            .addComponent(Total_text))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(VAT)
                                .addGap(18, 18, 18)
                                .addComponent(source2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(124, 124, 124))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TOTAL)
                                        .addGap(18, 18, 18)
                                        .addComponent(source3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Subtotal)
                                        .addGap(18, 18, 18)
                                        .addComponent(source)
                                        .addGap(233, 233, 233)
                                        .addComponent(kakka)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Subtotal_text)
                            .addComponent(Subtotal)
                            .addComponent(source)))
                    .addComponent(kakka))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Vat_text)
                            .addComponent(VAT)
                            .addComponent(source2))
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Total_text)
                    .addComponent(TOTAL)
                    .addComponent(source3))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Remove)
                    .addComponent(Update)
                    .addComponent(Clear)
                    .addComponent(Print))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedoActionPerformed
        if (undos.canRedo())
            undos.redo();
        updateUI();
    }//GEN-LAST:event_RedoActionPerformed

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
       jDialog1.setVisible(true);
    }//GEN-LAST:event_AddActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
       if(Warehouse_Combo.getSelectedItem().equals("Varasto A")){
           teksti = "Varasto A";
       }
       else if(Warehouse_Combo.getSelectedItem().equals("Varasto B")){
           teksti = "Varasto B";
       }
       else if(Warehouse_Combo.getSelectedItem().equals("Varasto C")){
           teksti = "Varasto C";
       }
       else{
           teksti = "Varasto D";
       }  
       
       UndoableEdit op = new AbstractUndoableEdit() {
            @Override
            public String getPresentationName() {
                return "add";
            }
            @Override
            public void undo() {
                if(list.size()>1){
                list.remove(list.size()-1);
                super.undo();
                }
            }
            @Override
            public void redo() {
                list.add(list2.get(list.size()));
                super.redo();
            }
        };
        undos.addEdit(op);
        InsertAction();
        jDialog1.setVisible(false);
    }//GEN-LAST:event_InsertActionPerformed

    private void UndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoActionPerformed
        if (undos.canUndo())
            undos.undo();
        updateUI();
    }//GEN-LAST:event_UndoActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Save();
    }//GEN-LAST:event_SaveActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        confirmExit();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        confirmExit();
    }//GEN-LAST:event_formWindowClosing

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        Remove();  
    }//GEN-LAST:event_RemoveActionPerformed

    private void Edit_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_okActionPerformed
         EditTableCell();
         
         Edit_dialog.setVisible(false);
         
    }//GEN-LAST:event_Edit_okActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        if(list.size()>0){ 
        UpdateAction();
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
                JFileChooser chooser = new JFileChooser();
                int returnVal = chooser.showOpenDialog(getContentPane());
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    String fileName = chooser.getSelectedFile().getPath();
                    list = loadProducts(fileName);
                    
                }
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       ClearTable();  
       AddProductToTable(list);
    }//GEN-LAST:event_OpenActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
    
       ClearTable(); 
       list.clear(); 
       id_count = 1;
    }//GEN-LAST:event_ClearActionPerformed

    private void OpenSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenSettingsActionPerformed
        jDialog2.setVisible(true);
    }//GEN-LAST:event_OpenSettingsActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
        MessageFormat header = new MessageFormat("User Report");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try{
            jTable1.print(JTable.PrintMode.NORMAL,header,footer);
        }catch(java.awt.print.PrinterException e){
            System.err.format(ID_HEADER, e.getMessage());
        }
    }//GEN-LAST:event_PrintActionPerformed

    private void edit_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edit_nameActionPerformed

    private void InsertKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InsertKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
       InsertAction();
       }
    }//GEN-LAST:event_InsertKeyPressed

    private void AddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_TAB){
       jDialog1.setVisible(true);
       }
    }//GEN-LAST:event_AddKeyPressed

    private void NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Price.requestFocusInWindow();  
        }
    }//GEN-LAST:event_NameKeyPressed

    private void PriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PriceKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Amount.requestFocusInWindow();  
        }
    }//GEN-LAST:event_PriceKeyPressed

    private void AmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AmountKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Vat_field.requestFocusInWindow();  
        }
    }//GEN-LAST:event_AmountKeyPressed

    private void Vat_fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Vat_fieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Warehouse_Combo.requestFocusInWindow();  
        }
    }//GEN-LAST:event_Vat_fieldKeyPressed

    private void Warehouse_ComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Warehouse_ComboKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Insert.requestFocusInWindow();  
        }
    }//GEN-LAST:event_Warehouse_ComboKeyPressed

    private void edit_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_nameKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           edit_price.requestFocusInWindow();  
        }
    }//GEN-LAST:event_edit_nameKeyPressed

    private void edit_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_priceKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           edit_quantity.requestFocusInWindow();  
        }
    }//GEN-LAST:event_edit_priceKeyPressed

    private void edit_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_quantityKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           edit_vat.requestFocusInWindow();  
        }
    }//GEN-LAST:event_edit_quantityKeyPressed

    private void edit_vatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_vatKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           edit_location.requestFocusInWindow();  
        }
    }//GEN-LAST:event_edit_vatKeyPressed

    private void edit_locationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_locationKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Edit_ok.requestFocusInWindow();  
        }
    }//GEN-LAST:event_edit_locationKeyPressed

    private void Edit_okKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Edit_okKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           EditTableCell();  
        }
    }//GEN-LAST:event_Edit_okKeyPressed

    private void AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmountActionPerformed

    private void edit_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edit_priceActionPerformed

    private void edit_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edit_quantityActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        update();
        if(jComboBox1.getSelectedItem().equals("Finnish")){
           Locale l = new Locale("fi","FI");
           Language(l);
        }
        else{
           Locale l = new Locale("en","EN");
           Language(l);
        }
       if(FontBox.getSelectedItem().equals("14")){
         font14();
           
       }
       else if(FontBox.getSelectedItem().equals("18")){
          font18(); 
       }
       else {
          font22();
       }
       
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void toDollarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toDollarsActionPerformed
        toEuros.setSelected(false);
    }//GEN-LAST:event_toDollarsActionPerformed

    private void toEurosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toEurosActionPerformed
        toDollars.setSelected(false);
    }//GEN-LAST:event_toEurosActionPerformed

    private void Warehouse_ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Warehouse_ComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Warehouse_ComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Projectwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Projectwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Projectwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Projectwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Projectwork().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField Amount;
    private javax.swing.JButton Clear;
    private javax.swing.JLabel Dialog1_Price;
    private javax.swing.JLabel Dialog1_Quantity;
    private javax.swing.JLabel Dialog1_productname;
    private javax.swing.JMenu Edit;
    private javax.swing.JDialog Edit_dialog;
    private javax.swing.JButton Edit_ok;
    private javax.swing.JMenu File;
    private javax.swing.JComboBox<String> FontBox;
    private javax.swing.JButton Insert;
    private javax.swing.JTextField Name;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenu Open1;
    private javax.swing.JMenuItem OpenSettings;
    private javax.swing.JTextField Price;
    private javax.swing.JButton Print;
    private javax.swing.JMenuItem Redo;
    private javax.swing.JButton Remove;
    private javax.swing.JMenuItem Save;
    private javax.swing.JLabel Subtotal;
    private javax.swing.JLabel Subtotal_text;
    private javax.swing.JLabel TOTAL;
    private javax.swing.JLabel Total_text;
    private javax.swing.JMenuItem Undo;
    private javax.swing.JButton Update;
    private javax.swing.JLabel VAT;
    private javax.swing.JTextField Vat_field;
    private javax.swing.JLabel Vat_procent;
    private javax.swing.JLabel Vat_text;
    private javax.swing.JComboBox<String> Warehouse_Combo;
    private javax.swing.JTextField edit_location;
    private javax.swing.JTextField edit_name;
    private javax.swing.JTextField edit_price;
    private javax.swing.JTextField edit_quantity;
    private javax.swing.JTextField edit_vat;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel kakka;
    private javax.swing.JLabel source;
    private javax.swing.JLabel source2;
    private javax.swing.JLabel source3;
    private javax.swing.JRadioButton toDollars;
    private javax.swing.JRadioButton toEuros;
    // End of variables declaration//GEN-END:variables

     List<Product> list = new LinkedList<Product>();
     List<Product> list2 = new LinkedList<Product>();
     List<Product> removedlist = new LinkedList<Product>();
     Product p2 = new Product();
     int id_count = 1;
     Double Vat = 0.0;
     Double SUBTOTAL = 0.0;
     Double Total_count = 0.0;
     String teksti;
     String currency = "€";
     UndoManager undos;
     boolean isEuro = true;
     
    //Confirm Exit Panel
    private void confirmExit() {
        if (JOptionPane.showConfirmDialog(this, "Do you want to exit to program?", "Confirm exit?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            dispose();
    }

    public List ListProducts(){    
        return list;
    }
    //Adds Product to JTable
    public void AddProductToTable(List<Product> list){
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[9];
        for(int i = 0; i < list.size(); i++){
        rowData[0] = list.get(i).id;
        rowData[1] = list.get(i).name;
        rowData[2] = list.get(i).price;
        rowData[3] = list.get(i).quantity;
        rowData[4] = list.get(i).location;
        rowData[5] = currency;
        rowData[6] = list.get(i).subtotal;
        rowData[7] = list.get(i).vat;
        rowData[8] = list.get(i).total;
        model.addRow(rowData);
        Calculate();
        
        }
    }
    
    
    public void Remove(){
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        if(i >= 0){
        model.removeRow(i);
        list.remove(i);
        Calculate();
    }
    }

    public void EditTableCell(){
        Total_count = 0.0;
        Vat =0.0;
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        list.get(i).name = edit_name.getText();
        list.get(i).price = Integer.parseInt(edit_price.getText());
        list.get(i).quantity = Integer.parseInt(edit_quantity.getText());    
        list.get(i).vat = Integer.parseInt(edit_vat.getText());
        list.get(i).location = edit_location.getText();     
        Integer price = Integer.parseInt(edit_price.getText());
        Integer amount = Integer.parseInt(edit_quantity.getText());
        Integer vat = Integer.parseInt(edit_vat.getText());
        Vat = Vat + vat;
        Total_count = Total_count + (amount*price) *(1+(Vat/100));
        SUBTOTAL = Total_count / (1+(Vat/100));
        list.get(i).total = Total_count;
        list.get(i).subtotal = list.get(i).price*list.get(i).quantity;
        model.setValueAt(edit_name.getText(), i, 1);
        model.setValueAt(edit_price.getText(), i, 2);
        model.setValueAt(edit_quantity.getText(), i, 3);
        model.setValueAt(edit_location.getText(), i, 4);
        model.setValueAt(SUBTOTAL, i, 6);
        model.setValueAt(edit_vat.getText(), i, 7);
        model.setValueAt(Total_count, i, 8);
        Calculate(); 
    }
    public void InsertAction(){
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       ClearTable();  
       Integer price = Integer.parseInt(Price.getText());
       Integer amount = Integer.parseInt(Amount.getText());
       Integer vat = Integer.parseInt(Vat_field.getText());
       Vat = Vat + vat;
       Total_count = Total_count + (amount*price) *(1+(Vat/100));
       Total_count = new BigDecimal(Total_count).setScale(2, RoundingMode.HALF_UP).doubleValue();
       SUBTOTAL = Total_count / (1+(Vat/100));
       Product p1 = new Product(id_count,Name.getText(),price,Total_count,amount,teksti,vat,SUBTOTAL);
       p2 = p1;
       list2.add(p2);
       id_count++;
       list.add(p1);
       AddProductToTable(list);
    } 
    
    //Updates the Product and Calculates the situation of the warehouse
    public void UpdateAction(){
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        edit_name.setText(model.getValueAt(i, 1).toString());
        edit_price.setText(model.getValueAt(i, 2).toString());
        edit_quantity.setText(model.getValueAt(i, 3).toString());
        edit_vat.setText(model.getValueAt(i, 7).toString());
        edit_location.setText(model.getValueAt(i, 4).toString());
        Edit_dialog.setVisible(true);
        Calculate();
    }   
    //Clears JTable and Calculates the situation of the warehouse
    public void ClearTable(){
       
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       for(int i = jTable1.getRowCount() - 1; i >= 0; i--){
       model.removeRow(i); 
       }
       Calculate();
    }
    //Calculates the situation of the warehouse
    public void Calculate(){
       Total_count = 0.0;
       Vat = 0.0;
       SUBTOTAL = 0.0;
       DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       for(int i = jTable1.getRowCount() - 1; i >= 0; i--){
       SUBTOTAL = SUBTOTAL + list.get(i).subtotal; 
       Total_count = Total_count + list.get(i).total; 
       }
       Vat = Total_count-SUBTOTAL;
       Vat = new BigDecimal(Vat).setScale(2, RoundingMode.HALF_UP).doubleValue();
       Total_count = Vat + SUBTOTAL;
       Total_count = new BigDecimal(Total_count).setScale(2, RoundingMode.HALF_UP).doubleValue();
       VAT.setText(Double.toString(Vat));
       Subtotal.setText(Double.toString(SUBTOTAL));
       TOTAL.setText(Double.toString(Total_count));
    }
    
     //Saves products 
    public void Save(){
    JFileChooser chooser = new JFileChooser();
                int returnVal = chooser.showSaveDialog(getContentPane());
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    String fileName = chooser.getSelectedFile().getPath();
                    saveProducts(list, fileName);
                    JOptionPane.showMessageDialog(getContentPane(), "Saved file " + fileName, "Saved", JOptionPane.INFORMATION_MESSAGE);
                }
    }
     
     public static void saveProducts(List<Product> product, String file) {
        try {
            Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));
            for (Product p : product) {
                writer.write(PRODUCT_START_LINE + "\n");
                writer.write(NAME_HEADER + p.getName() + "\n");
                writer.write(PRICE_HEADER + p.getPrice() + "\n");
                writer.write(ID_HEADER + p.getId() + "\n");
                writer.write(TOTAL_HEADER + p.getTotal() + "\n");
                writer.write(QUANTITY_HEADER + p.getQuantity() + "\n");
                writer.write(VAT_HEADER + p.getVat() + "\n");
                writer.write(SUBTOTAL_HEADER + p.getSubTotal() + "\n");
                writer.write(LOCATION_HEADER + p.getLocation() + "\n");
            }
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    //Loads saved Prodctlists
    public static List<Product> loadProducts(String file) {
        try {
            FileInputStream fis = new FileInputStream(file);
            return loadProducts(fis);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    public static List<Product> loadProducts(InputStream is) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
            List<Product> r = new LinkedList<Product>();
            Product current = null;
            String line = reader.readLine();
            while (line != null) {
                if (line.startsWith(PRODUCT_START_LINE)) {
                    if (current != null) {
                        r.add(current);
                    }
                    current = new Product();
                }
                if (line.startsWith(LOCATION_HEADER)) {
                    if (current != null) {
                        current.setLocation(line.substring(LOCATION_HEADER.length()).trim());
                    }
                }
                 if (line.startsWith(NAME_HEADER)) {
                    if (current != null) {
                        current.setName(line.substring(NAME_HEADER.length()).trim());
                    }
                }
                if (line.startsWith(PRICE_HEADER)) {
                    if (current != null) {
                        try {
                            int price = Integer.parseInt(line.substring(PRICE_HEADER.length()).trim());
                            current.setPrice(price);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing price " + line);
                        }
                    }
                }
                if (line.startsWith(ID_HEADER)) {
                    if (current != null) {
                        try {
                            int id = Integer.parseInt(line.substring(ID_HEADER.length()).trim());
                            current.setId(id);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing id " + line);
                        }
                    }
                }
                if (line.startsWith(TOTAL_HEADER)) {
                    if (current != null) {
                        try {
                            double total = Double.parseDouble(line.substring(TOTAL_HEADER.length()).trim());
                            current.setTotal(total);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing total " + line);
                        }
                    }
                }
                if (line.startsWith(QUANTITY_HEADER)) {
                    if (current != null) {
                        try {
                            int quantity = Integer.parseInt(line.substring(QUANTITY_HEADER.length()).trim());
                            current.setQuantity(quantity);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing quantity " + line);
                        }
                    }
                }
                if (line.startsWith(VAT_HEADER)) {
                    if (current != null) {
                        try {
                            int vat = Integer.parseInt(line.substring(VAT_HEADER.length()).trim());
                            current.setVat(vat);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing total " + line);
                        }
                    }
                }
                if (line.startsWith(SUBTOTAL_HEADER)) {
                    if (current != null) {
                        try {
                            double subtotal = Double.parseDouble(line.substring(SUBTOTAL_HEADER.length()).trim());
                            current.setSubTotal(subtotal);
                        } catch (NumberFormatException e) {
                            System.out.println("Error when parsing total " + line);
                        }
                    }
                }
                
                

                line = reader.readLine();
            } // while more lines in the file
            if (current != null) {
                r.add(current);
            }
            reader.close();
            return r;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    } 
    
        private void update() {
        
        
        if (toDollars.isSelected()&&isEuro == true) {
            source.setText("$");
            source2.setText("$");
            source3.setText("$");
            currency="$";
            changeCurrency();
            isEuro = false;
        } else if(toEuros.isSelected()&isEuro==false) {
            source.setText("€");
            source2.setText("€");
            source3.setText("€");
            currency="€";
            changeCurrency();
            isEuro = true;
        }
    }
    private void changeCurrency(){

        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
       for(int i = jTable1.getRowCount() - 1; i >= 0; i--){
       model.setValueAt(currency, i, 5);
       if (toDollars.isSelected()) {      
       list.get(i).subtotal = list.get(i).subtotal / 0.8973461;
       list.get(i).subtotal = new BigDecimal(list.get(i).subtotal).setScale(2, RoundingMode.HALF_UP).doubleValue();
       list.get(i).total = list.get(i).total / 0.897346;
       list.get(i).total = new BigDecimal(list.get(i).total).setScale(2, RoundingMode.HALF_UP).doubleValue();
       model.setValueAt(list.get(i).subtotal, i, 6);
       model.setValueAt(list.get(i).total, i, 8);
       Calculate();
       }
       else{
       list.get(i).subtotal = list.get(i).subtotal * 0.8973462;
       list.get(i).subtotal = new BigDecimal(list.get(i).subtotal).setScale(2, RoundingMode.HALF_UP).doubleValue();
       list.get(i).total = list.get(i).total * 0.897346;
       list.get(i).total = new BigDecimal(list.get(i).total).setScale(2, RoundingMode.HALF_UP).doubleValue();
       model.setValueAt(list.get(i).subtotal, i, 6);
       model.setValueAt(list.get(i).total, i, 8);
       Calculate();
       }
       }
    }
        private void updateUI() {
        if (undos.canUndo()) {
            
            Undo.setEnabled(true);
            Undo.setText(undos.getUndoPresentationName());
            ClearTable(); 
            AddProductToTable(list);
        } else {
            Undo.setEnabled(false);
        }
        if (undos.canRedo()) {
            Redo.setEnabled(true);
            Redo.setText(undos.getRedoPresentationName());
            ClearTable(); 
            AddProductToTable(list);
        } else {
            Redo.setEnabled(false);
        }
    }
        
        private void Language(Locale l){
        ResourceBundle r = ResourceBundle.getBundle("project/Bundle", l);
        Add.setText(r.getString("Projectwork.Insert.text"));
        jTable1.getColumnModel().getColumn(0).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title1")); // NOI18N
        jTable1.getColumnModel().getColumn(2).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title2")); // NOI18N
        jTable1.getColumnModel().getColumn(3).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title3")); // NOI18N
        jTable1.getColumnModel().getColumn(4).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title5")); // NOI18N
        jTable1.getColumnModel().getColumn(5).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title6")); // NOI18N
        jTable1.getColumnModel().getColumn(6).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title7")); // NOI18N
        jTable1.getColumnModel().getColumn(7).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title8_1")); // NOI18N
        jTable1.getColumnModel().getColumn(8).setHeaderValue(r.getString("Projectwork.jTable1.columnModel.title4_2")); // NOI18N
        jLabel6.setText(r.getString("Projectwork.jLabel6.text"));
        toEuros.setText(r.getString("Projectwork.toEuros.text"));
        jLabel4.setText(r.getString("Projectwork.jLabel4.text"));
        toDollars.setText(r.getString("Projectwork.toDollars.text"));
        source3.setText(r.getString("Projectwork.source3.text"));
        jLabel3.setText(r.getString("Projectwork.jLabel3.text"));
        jLabel2.setText(r.getString("Projectwork.jLabel2.text"));
        Edit_ok.setText(r.getString("Projectwork.Edit_ok.text"));
        source2.setText(r.getString("Projectwork.source2.text"));
        source.setText(r.getString("Projectwork.source.text"));
        jLabel1.setText(r.getString("Projectwork.jLabel6.text"));
        Vat_field.setText(r.getString("Projectwork.Vat_field.text"));
        Vat_procent.setText(r.getString("Projectwork.Vat_procent.text"));
        Dialog1_Quantity.setText(r.getString("Projectwork.Dialog1_Quantity.text"));
        Dialog1_Price.setText(r.getString("Projectwork.Dialog1_Price.text"));
        Dialog1_productname.setText(r.getString("Projectwork.Dialog1_productname.text"));
        Insert.setText(r.getString("Projectwork.Insert.text"));
        Amount.setText(r.getString("Projectwork.Amount.text"));
        Price.setText(r.getString("Projectwork.Price.text"));
        OpenSettings.setText(r.getString("Projectwork.OpenSettings.text"));
        Print.setText(r.getString("Projectwork.Print.text"));
        Clear.setText(r.getString("Projectwork.Clear.text"));
        Update.setText(r.getString("Projectwork.Update.text"));
        Remove.setText(r.getString("Projectwork.Remove.text"));
        Name.setText(r.getString("Projectwork.Name.text"));
        Open1.setText(r.getString("Projectwork.Open1.text"));
        Redo.setText(r.getString("Projectwork.Redo.text"));
        Undo.setText(r.getString("Projectwork.Undo.text"));
        Edit.setText(r.getString("Projectwork.Edit.text"));
        Total_text.setText(r.getString("Projectwork.Total_text.text"));
        jMenuItem1.setText(r.getString("Projectwork.jMenuItem1.text"));
        Vat_text.setText(r.getString("Projectwork.Vat_text.text"));
        Subtotal_text.setText(r.getString("Projectwork.Subtotal_text.text"));
        Open.setText(r.getString("Projectwork.Open.text"));
        jLabel9.setText(r.getString("Projectwork.jLabel9.text"));
        Save.setText(r.getString("Projectwork.Save.text"));
        File.setText(r.getString("Projectwork.File.text"));
        jMenuItem2.setText(r.getString("Projectwork.jMenuItem2.text"));
        jButton2.setText(r.getString("Projectwork.jButton2.text"));
        jLabel7.setText(r.getString("Projectwork.jLabel7.text"));
         
        }
        
        
        private void font22(){
        Add.setFont(Add.getFont().deriveFont(22f));
        jLabel6.setFont(jLabel6.getFont().deriveFont(22f));
        toEuros.setFont(toEuros.getFont().deriveFont(22f));
        jLabel4.setFont(jLabel4.getFont().deriveFont(22f));
        toDollars.setFont(toDollars.getFont().deriveFont(22f));
        source3.setFont(source3.getFont().deriveFont(22f));
        jLabel3.setFont(jLabel3.getFont().deriveFont(22f));
        jLabel2.setFont(jLabel2.getFont().deriveFont(22f));
        Edit_ok.setFont(Edit_ok.getFont().deriveFont(22f));
        source2.setFont(source2.getFont().deriveFont(22f));
        source.setFont(source.getFont().deriveFont(22f));
        jLabel1.setFont(jLabel1.getFont().deriveFont(22f));
        Vat_field.setFont(Vat_field.getFont().deriveFont(22f));
        Vat_procent.setFont(Vat_procent.getFont().deriveFont(22f));
        Dialog1_Quantity.setFont(Dialog1_Quantity.getFont().deriveFont(22f));
        Dialog1_Price.setFont(Dialog1_Price.getFont().deriveFont(22f));
        Dialog1_productname.setFont(Dialog1_productname.getFont().deriveFont(22f));
        Insert.setFont(Insert.getFont().deriveFont(22f));
        Amount.setFont(Amount.getFont().deriveFont(22f));
        Price.setFont(Price.getFont().deriveFont(22f));
        OpenSettings.setFont(OpenSettings.getFont().deriveFont(22f));
        Print.setFont(Print.getFont().deriveFont(22f));
        Clear.setFont(Clear.getFont().deriveFont(22f));
        Update.setFont(Update.getFont().deriveFont(22f));
        Remove.setFont(Remove.getFont().deriveFont(22f));
        Name.setFont(Name.getFont().deriveFont(22f));
        Open1.setFont(Open1.getFont().deriveFont(22f));
        Redo.setFont(Redo.getFont().deriveFont(22f));
        Undo.setFont(Undo.getFont().deriveFont(22f));
        Edit.setFont(Edit.getFont().deriveFont(22f));
        Total_text.setFont(Total_text.getFont().deriveFont(22f));
        jMenuItem1.setFont(jMenuItem1.getFont().deriveFont(22f));
        Vat_text.setFont(Vat_text.getFont().deriveFont(22f));
        Subtotal_text.setFont(Subtotal_text.getFont().deriveFont(22f));
        Open.setFont(Open.getFont().deriveFont(22f));
        jLabel9.setFont(jLabel9.getFont().deriveFont(22f));
        Save.setFont(Save.getFont().deriveFont(22f));
        File.setFont(File.getFont().deriveFont(22f));
        jMenuItem2.setFont(jMenuItem2.getFont().deriveFont(22f));
        jButton2.setFont(jButton2.getFont().deriveFont(22f));
        jLabel7.setFont(jLabel7.getFont().deriveFont(22f));
        }
        private void font18(){
        Add.setFont(Add.getFont().deriveFont(18f));
        jLabel6.setFont(jLabel6.getFont().deriveFont(18f));
        toEuros.setFont(toEuros.getFont().deriveFont(18f));
        jLabel4.setFont(jLabel4.getFont().deriveFont(18f));
        toDollars.setFont(toDollars.getFont().deriveFont(18f));
        source3.setFont(source3.getFont().deriveFont(18f));
        jLabel3.setFont(jLabel3.getFont().deriveFont(18f));
        jLabel2.setFont(jLabel2.getFont().deriveFont(18f));
        Edit_ok.setFont(Edit_ok.getFont().deriveFont(18f));
        source2.setFont(source2.getFont().deriveFont(18f));
        source.setFont(source.getFont().deriveFont(18f));
        jLabel1.setFont(jLabel1.getFont().deriveFont(18f));
        Vat_field.setFont(Vat_field.getFont().deriveFont(18f));
        Vat_procent.setFont(Vat_procent.getFont().deriveFont(18f));
        Dialog1_Quantity.setFont(Dialog1_Quantity.getFont().deriveFont(18f));
        Dialog1_Price.setFont(Dialog1_Price.getFont().deriveFont(18f));
        Dialog1_productname.setFont(Dialog1_productname.getFont().deriveFont(18f));
        Insert.setFont(Insert.getFont().deriveFont(18f));
        Amount.setFont(Amount.getFont().deriveFont(18f));
        Price.setFont(Price.getFont().deriveFont(18f));
        OpenSettings.setFont(OpenSettings.getFont().deriveFont(18f));
        Print.setFont(Print.getFont().deriveFont(18f));
        Clear.setFont(Clear.getFont().deriveFont(18f));
        Update.setFont(Update.getFont().deriveFont(18f));
        Remove.setFont(Remove.getFont().deriveFont(18f));
        Name.setFont(Name.getFont().deriveFont(18f));
        Open1.setFont(Open1.getFont().deriveFont(18f));
        Redo.setFont(Redo.getFont().deriveFont(18f));
        Undo.setFont(Undo.getFont().deriveFont(18f));
        Edit.setFont(Edit.getFont().deriveFont(18f));
        Total_text.setFont(Total_text.getFont().deriveFont(18f));
        jMenuItem1.setFont(jMenuItem1.getFont().deriveFont(18f));
        Vat_text.setFont(Vat_text.getFont().deriveFont(18f));
        Subtotal_text.setFont(Subtotal_text.getFont().deriveFont(18f));
        Open.setFont(Open.getFont().deriveFont(18f));
        jLabel9.setFont(jLabel9.getFont().deriveFont(18f));
        Save.setFont(Save.getFont().deriveFont(18f));
        File.setFont(File.getFont().deriveFont(18f));
        jMenuItem2.setFont(jMenuItem2.getFont().deriveFont(18f));
        jButton2.setFont(jButton2.getFont().deriveFont(18f));
        jLabel7.setFont(jLabel7.getFont().deriveFont(18f));
        }
        
        private void font14(){
        Add.setFont(Add.getFont().deriveFont(22f));
        jLabel6.setFont(jLabel6.getFont().deriveFont(14f));
        toEuros.setFont(toEuros.getFont().deriveFont(14f));
        jLabel4.setFont(jLabel4.getFont().deriveFont(14f));
        toDollars.setFont(toDollars.getFont().deriveFont(14f));
        source3.setFont(source3.getFont().deriveFont(14f));
        jLabel3.setFont(jLabel3.getFont().deriveFont(14f));
        jLabel2.setFont(jLabel2.getFont().deriveFont(14f));
        Edit_ok.setFont(Edit_ok.getFont().deriveFont(14f));
        source2.setFont(source2.getFont().deriveFont(14f));
        source.setFont(source.getFont().deriveFont(14f));
        jLabel1.setFont(jLabel1.getFont().deriveFont(14f));
        Vat_field.setFont(Vat_field.getFont().deriveFont(14f));
        Vat_procent.setFont(Vat_procent.getFont().deriveFont(14f));
        Dialog1_Quantity.setFont(Dialog1_Quantity.getFont().deriveFont(14f));
        Dialog1_Price.setFont(Dialog1_Price.getFont().deriveFont(14f));
        Dialog1_productname.setFont(Dialog1_productname.getFont().deriveFont(14f));
        Insert.setFont(Insert.getFont().deriveFont(14f));
        Amount.setFont(Amount.getFont().deriveFont(14f));
        Price.setFont(Price.getFont().deriveFont(14f));
        OpenSettings.setFont(OpenSettings.getFont().deriveFont(14f));
        Print.setFont(Print.getFont().deriveFont(14f));
        Clear.setFont(Clear.getFont().deriveFont(14f));
        Update.setFont(Update.getFont().deriveFont(14f));
        Remove.setFont(Remove.getFont().deriveFont(14f));
        Name.setFont(Name.getFont().deriveFont(14f));
        Open1.setFont(Open1.getFont().deriveFont(14f));
        Redo.setFont(Redo.getFont().deriveFont(14f));
        Undo.setFont(Undo.getFont().deriveFont(14f));
        Edit.setFont(Edit.getFont().deriveFont(14f));
        Total_text.setFont(Total_text.getFont().deriveFont(14f));
        jMenuItem1.setFont(jMenuItem1.getFont().deriveFont(14f));
        Vat_text.setFont(Vat_text.getFont().deriveFont(14f));
        Subtotal_text.setFont(Subtotal_text.getFont().deriveFont(14f));
        Open.setFont(Open.getFont().deriveFont(14f));
        jLabel9.setFont(jLabel9.getFont().deriveFont(14f));
        Save.setFont(Save.getFont().deriveFont(14f));
        File.setFont(File.getFont().deriveFont(14f));
        jMenuItem2.setFont(jMenuItem2.getFont().deriveFont(14f));
        jButton2.setFont(jButton2.getFont().deriveFont(14f));
        jLabel7.setFont(jLabel7.getFont().deriveFont(14f));
        }
       
}

